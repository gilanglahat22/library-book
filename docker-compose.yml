version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: library-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-librarydb}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - library-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: library-backend
    ports:
      - "${SERVER_PORT:-8080}:8080"
    environment:
      # Database Configuration
      DB_URL: ${DB_URL:-jdbc:postgresql://postgres:5432/librarydb}
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      
      # API Key Configuration
      API_KEY_HEADER_NAME: ${API_KEY_HEADER_NAME:-X-API-KEY}
      API_KEY_ADMIN: ${API_KEY_ADMIN:-admin-api-key-123}
      API_KEY_BOOKS: ${API_KEY_BOOKS:-books-api-key-456}
      API_KEY_AUTHORS: ${API_KEY_AUTHORS:-authors-api-key-789}
      API_KEY_BORROWED_BOOKS: ${API_KEY_BORROWED_BOOKS:-borrowed-books-api-key-101}
      
      # JPA Configuration
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO:-update}
      SPRING_JPA_SHOW_SQL: ${SPRING_JPA_SHOW_SQL:-true}
      SPRING_JPA_FORMAT_SQL: ${SPRING_JPA_FORMAT_SQL:-true}
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - library-network
    restart: unless-stopped

  # React Frontend (Optional - can be run separately in development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: library-frontend
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:${SERVER_PORT:-8080}
      - REACT_APP_API_KEY_HEADER=${API_KEY_HEADER_NAME:-X-API-KEY}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - library-network

volumes:
  postgres_data:

networks:
  library-network:
    driver: bridge 